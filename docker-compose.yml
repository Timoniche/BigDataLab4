version: '3.10'
services:
  web:
    image: ddulaev/lab4:latest
    container_name: web
    depends_on:
      - db
      - kafka
    environment:
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}
      - TOPIC_NAME=${TOPIC_NAME}
    build:
      dockerfile: DockerfileModel
    command: bash -c "python -m src.server"
    ports:
      - "8001:8001"
    restart: on-failure

  db:
    image: 'postgres:14.1-alpine'
    container_name: db
    volumes:
      - db-data:/var/lib/postgres/data
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    ports:
      - "5432:5432"
    restart: on-failure

  zookeeper:
    image: bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_TOPIC_NAME=${TOPIC_NAME}
      - KAFKA_TOPIC_PARTITIONS=${PARTITIONS_COUNT}
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami

volumes:
  db-data:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
